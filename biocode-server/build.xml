<project xmlns:ivy="antlib:org.apache.ivy.ant" name="MooreaLabBench-sever" default="create-war" basedir="..">

    <property name="version-regex-pattern" value=".*PLUGIN_VERSION\s+=\s+&quot;(\d+\.\d+\.\d+)&quot;;.*"/>

    <loadfile property="plugin.version" srcfile="src/com/biomatters/plugins/biocode/BiocodePlugin.java">
        <filterchain>
            <linecontainsregexp>
                <regexp pattern="${version-regex-pattern}"/>
            </linecontainsregexp>
            <replaceregex pattern="${version-regex-pattern}" replace="\1"/>
            <replacestring from="." to="_"/>
            <striplinebreaks/>
        </filterchain>
    </loadfile>

    <property name="short-plugin-name" value="Biocode_${plugin.version}"/>

    <property name="build" location="build"/>
    <property name="classes" location="classes"/>
    <property name="lib" location="lib"/>
    <property name="resources" location="resources"/>
    <property name="src" location="src"/>
    <property name="report" location="report"/>
    <property name="GeneiousFiles" location="GeneiousFiles"/>

    <property name="server-folder" value="biocode-server"/>
    <property name="server-src" value="${server-folder}/src"/>
    <property name="server-lib" value="${server-folder}/web/WEB-INF/lib"/>
    <property name="server-resources" value="${server-folder}/resources"/>
    <property name="server-test" value="${server-folder}/test"/>
    <property name="server-test.classes" value="${server-folder}/testclasses"/>
    <property name="warfile" value="BiocodeLIMS.war"/>

    <path id="classpath">
        <fileset dir="${lib}"/>
    </path>

    <path id="server-classpath">
        <path refid="classpath"/>
        <pathelement path="${classes}"/>
        <fileset dir="${server-lib}"/>
    </path>

    <target name="compile-server" depends="compile-plugin, retrieve-server-dependencies">
        <javac target="1.6" source="1.6" destdir="${classes}" debug="true">
            <classpath refid="server-classpath"/>
            <src path="${server-src}"/>
        </javac>
    </target>

    <target name="create-war" depends="compile-server">
        <war destfile="${warfile}" webxml="${server-folder}/web/WEB-INF/web.xml">
            <webinf dir="${server-folder}/web/WEB-INF"/>
            <classes dir="${classes}"/>
            <lib dir="${lib}">
                <exclude name="GeneiousPublicAPI*.jar"/>
                <exclude name="jdom*.jar"/>
                <exclude name="jebl*.jar"/>
            </lib>
            <lib dir="${server-lib}"/>
            <fileset dir="${server-folder}/web"/>
            <fileset dir="${server-lib}">
                <include name="images/*"/>
            </fileset>
            <classes dir="${server-folder}/resources"/>
        </war>
    </target>

    <target name="compile-plugin" depends="clean,prepare,retrieve-plugin-dependencies">
        <javac target="1.6" source="1.6" destdir="${classes}" debug="true">
            <classpath refid="classpath"/>
            <src path="${src}"/>
        </javac>
    </target>

    <target name="prepare">
        <mkdir dir="${build}"/>
        <mkdir dir="${classes}"/>
        <mkdir dir="${report}"/>
        <mkdir dir="${lib}"/>
        <mkdir dir="${server-lib}"/>
        <mkdir dir="${server-test.classes}"/>
    </target>

    <target name="clean">
        <delete dir="${server-test.classes}"/>
        <delete dir="${lib}"/>
        <delete dir="${server-lib}"/>
        <delete dir="${build}"/>
        <delete dir="${classes}"/>
        <delete dir="${report}"/>
        <delete dir="${GeneiousFiles}"/>
        <delete file="GeneiousFiles.zip"/>
        <delete file="${warfile}"/>
    </target>

    <target name="compile-server-tests" depends="compile-server">
        <javac target="1.6" source="1.6" destdir="${server-test.classes}" debug="true">
            <classpath>
                <path refid="server-classpath"/>
                <pathelement location="${classes}"/>
            </classpath>
            <src path="${server-test}"/>
        </javac>
    </target>

    <target name="server-test" depends="compile-server-tests">
        <junit dir="GeneiousFiles" fork="true" maxmemory="1024M" printsummary="on" timeout="180000">
            <batchtest todir="${report}">
                <fileset dir="${server-test.classes}">
                    <include name="**/*Test.class"/>
                </fileset>
            </batchtest>
            <classpath>
                <file file="{GeneiousFiles}/iSeek.jar"/>
                <fileset dir="${GeneiousFiles}/lib"/>
                <pathelement location="${classes}"/>
                <pathelement location="${server-resources}"/>
                <pathelement location="${server-test}"/>
                <pathelement location="${server-test.classes}"/>
                <pathelement location="${GeneiousFiles}/resources"/>
                <pathelement location="${GeneiousFiles}/bundledPlugins"/>
                <path refid="server-classpath"/>
            </classpath>
            <env key="DISPLAY" value="0.0"/>
            <env key="DYLD_LIBRARY_PATH" value="/Library/Application Support/Geneious/Frameworks"/>
            <formatter type="xml"/>
            <jvmarg value="-Xms256M"/>
            <jvmarg value="-ea"/>
            <jvmarg value="-XX:MaxNewSize=40M"/>
            <jvmarg value="-XX:MaxPermSize=256M"/>
            <jvmarg value="-XX:ReservedCodeCacheSize=128m"/>
            <jvmarg value="-Xss512K"/>
            <sysproperty key="report.dir" value="${report}"/>
            <sysproperty key="user.dir" value="${build}"/>
        </junit>
    </target>

    <!-- setup reference to the Ivy Ant tasks library -->
    <path id="ivy.lib.path">
        <fileset dir="tools" includes="ivy*.jar"/>
    </path>


    <taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>

    <!-- load ivy settings -->
    <ivy:settings file="ivysettings.xml" id="biocode.ivy.config"/>
    <property name="ivy.dep.file" value="biocode-server/ivy.xml" />

    <target name="retrieve-plugin-dependencies" description="Retrieve dependencies with ivy">
       <ivy:retrieve conf="build" settingsref="biocode.ivy.config"/>
    </target>

    <target name="evaluate-geneious-files-exists">
        <condition property="GeneiousFiles.exists">
           <available file="${GeneiousFiles}" type="dir"/>
        </condition>
    </target>

    <target name="retrieve-geneious-runtime-dependencies" description="Retrieve the Geneious runtime for running the tests" depends="evaluate-geneious-files-exists" unless="GeneiousFiles.exists">
       <ivy:retrieve conf="test" type="resource" settingsref="biocode.ivy.config" pattern="${basedir}/[artifact].[ext]"/>
       <unzip src="GeneiousFiles.zip" dest="."/>
    </target>

    <target name="retrieve-server-dependencies" description="Retrieve all dependencies required to build the LIMS server war file" depends="retrieve-plugin-dependencies,retrieve-geneious-runtime-dependencies">
        <ivy:retrieve conf="server" settingsref="biocode.ivy.config" pattern="${basedir}/biocode-server/web/WEB-INF/lib/[artifact]-[type]-[revision].[ext]"/>
        <copy todir="${server-lib}">
            <fileset dir="${GeneiousFiles}">
                <include name="iSeek.jar"/>
            </fileset>
            <fileset dir="${GeneiousFiles}/lib">
                <!-- We can refine this list later.  For now we'll just take all the runtime libs minus the SOAP libraries -->
                <include name="*.jar"/>
                <exclude name="webservices-*.jar"/>
            </fileset>
        </copy>
        <copy todir="${classes}">
            <fileset dir="${GeneiousFiles}/resources">
                <include name="images/*"/>
                <include name="*.properties"/>
            </fileset>
        </copy>
    </target>

    <target name="clean-ivy-cache">
        <ivy:cleancache settingsRef="biocode.ivy.config"/>
    </target>
</project>